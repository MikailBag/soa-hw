syntax = "proto3";

package com.example.demo.api.chat;

option go_package = "example.com/soa/pb";

message MessageData {
  // author of the message
  string participant_id = 1;
  string body = 2;
  bool eof = 3;
}

message Topic {
  string room_id = 1;
  // "main" - available during day, readable for all, writable for all alive
  // "criminals" - always available, readable & writable for alive criminals
  // "dead" - always available, readable & writable for killed players
  string stream_id = 2;
}

message SendRequest {
  Topic topic = 1;
  MessageData message = 2;
}

message SendResponse {
}

message WatchRequest {
  Topic topic = 1;
  string participant_id = 2;
}

message WatchEvent {
  MessageData message = 1;
}

service ChatService {
  rpc Send(SendRequest) returns (SendResponse);
  rpc Watch(WatchRequest) returns (stream WatchEvent);
}
